"$schema" = "http://json-schema.org/draft-07/schema#"
description = "A description of a jupyak pull request"
title = "Yak"

["$defs".CondaEnv]
description = "A description of the conda environment for doing work."
title = "CondaEnv"

["$defs".CondaEnv.properties.channels]
description = "the priority-ordered set of conda URLs of channels to get packages"
type = "array"

["$defs".CondaEnv.properties.channels.items]
type = "string"

["$defs".CondaEnv.properties.dependencies]
description = "the names of conda packages (or a `pip:` object) to install"
type = "array"

["$defs".CondaEnv.properties.dependencies.items]
anyOf = [{ type = "string" }, { "$ref" = "#/$defs/PipDeps" }]

["$defs".CondaEnv.properties.pypi_to_conda]
description = "names of PyPI distributions to replace with their conda-forge counterparts"
type = "object"

["$defs".CondaEnv.properties.variables]
description = "environment variables to set when the work environment is activated"
type = "object"

["$defs".CondaEnv.properties.variables.additionalProperties]
type = "string"

["$defs".GitHub]
description = "Information for how to clone the baseline and PRs for this repo"
title = "GitHub"

["$defs".GitHub.properties.baseline]
description = "the URL of the baseline HEAD"
pattern = "^(tree/[^s]+|pull/\\d+|releases/tag/[^s]+)$"
type = "string"

["$defs".GitHub.properties.merge_options]
description = "extra options for (and requiring) the ``merge_strategy``"
type = "array"

["$defs".GitHub.properties.merge_options.items]
type = "string"

["$defs".GitHub.properties.merge_strategy]
description = "a custom `--strategy` to use during `git merge`"
type = "string"

["$defs".GitHub.properties.merge_with]
description = "an optional, ordered list of branches to merge into the `baseline`"
type = "array"

["$defs".GitHub.properties.merge_with.items]
pattern = "^(tree/[^s]+|pull/\\d+|releases/tag/[^s]+)$"
type = "string"

["$defs".GitHub.properties.url]
description = "the URL of the repo"
pattern = "https://github\\.com/.*"
type = "string"

["$defs".JSOptions]
description = "JavaScript-related provisioning, building, and linking."
title = "JSOptions"

["$defs".JSOptions.properties.dependencies]
description = "the names of other members of `repos` that need to built and linked into this repo in the JS environment"
type = "array"

["$defs".JSOptions.properties.dependencies.items]
type = "string"

["$defs".JSOptions.properties.dist_exclude_patterns]
description = "regular expressions for the paths in this repo that should _not_ be built and linked in other repos"
type = "array"

["$defs".JSOptions.properties.dist_exclude_patterns.items]
type = "string"

["$defs".JSOptions.properties.install_exclude_resolutions]
description = "regular expressions for the npm `@org/pkg` names that should _not_ be installed, ever, in this repo"
type = "array"

["$defs".JSOptions.properties.install_exclude_resolutions.items]
type = "string"

["$defs".JSOptions.properties.link_exclude_patterns]
description = "regular expressions for the npm `@org/pkg` names that should _not_ be linked into this repo"
type = "array"

["$defs".JSOptions.properties.link_exclude_patterns.items]
type = "string"

["$defs".JSOptions.properties.tasks]
description = "task templates required to fulfill various js needs"
type = "object"

["$defs".LiteOptions]
description = "options for the final jupyterlite build"
title = "LiteOptions"

["$defs".LiteOptions.properties.gist]
description = "a gist ID on GitHub to use as JupyterLite contents and config"
type = "string"

["$defs".PipDeps]
description = "Eject to the `pip` ecosystem."
title = "PipDeps"

["$defs".PipDeps.properties.pip]
description = "a PEP 508 description of a pip dependency"
type = "array"

["$defs".PipDeps.properties.pip.items]
type = "string"

["$defs".PythonOptions]
description = "Python-related provisioning, building, and linking."
title = "PythonOptions"

["$defs".PythonOptions.properties.dependencies]
description = "the names of other members of `repos` that need to built and linked into this repo in the Python environment"
type = "array"

["$defs".PythonOptions.properties.dependencies.items]
type = "string"

["$defs".PythonOptions.properties.file_dep]
description = "files needed (usually created by js tasks) before and editable python install"
type = "array"

["$defs".PythonOptions.properties.file_dep.items]
type = "string"

["$defs".PythonOptions.properties.lab_extensions]
description = "paths with extra file depenendencies needed to build an extension in this repo"
type = "object"

["$defs".PythonOptions.properties.modules]
description = "the importable python names provided by this repo"
type = "array"

["$defs".PythonOptions.properties.modules.items]
type = "string"

["$defs".PythonOptions.properties.pyproject_tomls]
description = "pyproject toml files for installable packages"
type = "array"

["$defs".PythonOptions.properties.pyproject_tomls.items]
type = "string"

["$defs".Repo]
description = "A description of a repo."
title = "Repo"

["$defs".Repo.properties.github]
"$ref" = "#/$defs/GitHub"

["$defs".Repo.properties.js]
"$ref" = "#/$defs/JSOptions"

["$defs".Repo.properties.lite]
"$ref" = "#/$defs/RepoLiteOptions"

["$defs".Repo.properties.name]
description = "the duplicated name from the parent ``repos`` dictionary used for dependencies"
type = "string"

["$defs".Repo.properties.py]
"$ref" = "#/$defs/PythonOptions"

["$defs".Repo.properties.variables]
description = "environment variables to set when the work environment is activated"
type = "object"

["$defs".Repo.properties.variables.additionalProperties]
type = "string"

["$defs".RepoLiteOptions]
title = "RepoLiteOptions"

["$defs".RepoLiteOptions.properties.needs_pth]
description = "names of packages this repo provides that need to be installed before a lite site build"
type = "array"

["$defs".RepoLiteOptions.properties.needs_pth.items]
type = "string"

["$defs".RepoLiteOptions.properties.skip_wheel_patterns]
description = "paths to skip building wheels"
type = "array"

["$defs".RepoLiteOptions.properties.skip_wheel_patterns.items]
type = "string"

["$defs".RepoLiteOptions.properties.wheel]
description = "whether to build and ship a noarch wheel for pyodide"
type = "boolean"

["$defs".RepoLiteOptions.properties.wheel_file_dep]
description = "extra files needed to build a given wheel"
type = "object"

[properties.env]
"$ref" = "#/$defs/CondaEnv"

[properties.env.default]
channels = ["conda-forge", "nodefaults"]
dependencies = [
  "python ==3.11.*",
  "nodejs ==20.*",
  "yarn ==3.6.*",
  "pip",
  "hatch",
  "hatch-jupyter-builder",
  "jupyter-packaging",
  "python-build",
  "python-libarchive-c",
]

[properties.env.default.pypi_to_conda]
build = "python-build"
fastjsonschema = "python-fastjsonschema"
jupyterlab-pygments = "jupyterlab_pygments"
prometheus-client = "prometheus_client"
stack-data = "stack_data"

[properties.env.default.variables]

[properties.lite]
"$ref" = "#/$defs/LiteOptions"

[properties.repos]
type = "object"

[[properties.repos.additionalProperties.anyOf]]
"$ref" = "#/$defs/Repo"
title = "custom repo"
type = "object"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "comm", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "comm"

[properties.repos.additionalProperties.anyOf.default]
name = "comm"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/ipython/comm"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "ipykernel", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "ipykernel"

[properties.repos.additionalProperties.anyOf.default]
name = "ipykernel"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/ipython/ipykernel"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "ipython", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "ipython"

[properties.repos.additionalProperties.anyOf.default]
name = "ipython"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/ipython/ipython"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "ipywidgets", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "ipywidgets"

[properties.repos.additionalProperties.anyOf.default]
name = "ipywidgets"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter-widgets/ipywidgets"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyter_client", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyter_client"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_client"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/jupyter_client"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyter_core", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyter_core"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_core"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/jupyter_core"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyter_events", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyter_events"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_events"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/jupyter_events"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyter_server", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyter_server"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_server"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter-server/jupyter_server"

[[properties.repos.additionalProperties.anyOf]]
title = "jupyter_server_terminals"

[[properties.repos.additionalProperties.anyOf.allOf]]
type = "object"

[properties.repos.additionalProperties.anyOf.allOf.properties.name]
const = "jupyter_server_terminals"
type = "string"

[[properties.repos.additionalProperties.anyOf.allOf]]
"$ref" = "#/$defs/Repo"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyter_server_terminals"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter-server/jupyter_server_terminals"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyterlab", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyterlab"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyterlab/jupyterlab"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyterlab_server", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyterlab_server"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlab_server"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyterlab/jupyterlab_server"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "jupyterlite", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "jupyterlite"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlite"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyterlite/jupyterlite"

[[properties.repos.additionalProperties.anyOf]]
title = "jupyterlite_pyodide_kernel"

[[properties.repos.additionalProperties.anyOf.allOf]]
type = "object"

[properties.repos.additionalProperties.anyOf.allOf.properties.name]
const = "jupyterlite_pyodide_kernel"
type = "string"

[[properties.repos.additionalProperties.anyOf.allOf]]
"$ref" = "#/$defs/Repo"

[properties.repos.additionalProperties.anyOf.default]
name = "jupyterlite_pyodide_kernel"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyterlite/pyodide-kernel"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "lumino", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "lumino"

[properties.repos.additionalProperties.anyOf.default]
name = "lumino"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyterlab/lumino"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "nbclient", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "nbclient"

[properties.repos.additionalProperties.anyOf.default]
name = "nbclient"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/nbclient"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "nbconvert", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "nbconvert"

[properties.repos.additionalProperties.anyOf.default]
name = "nbconvert"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/nbconvert"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "nbformat", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "nbformat"

[properties.repos.additionalProperties.anyOf.default]
name = "nbformat"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/nbformat"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "notebook", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "notebook"

[properties.repos.additionalProperties.anyOf.default]
name = "notebook"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/notebook"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "notebook_shim", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "notebook_shim"

[properties.repos.additionalProperties.anyOf.default]
name = "notebook_shim"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/jupyter/notebook_shim"

[[properties.repos.additionalProperties.anyOf]]
allOf = [
  { properties = { name = { const = "traitlets", type = "string" } }, type = "object" },
  { "$ref" = "#/$defs/Repo" },
]
title = "traitlets"

[properties.repos.additionalProperties.anyOf.default]
name = "traitlets"

[properties.repos.additionalProperties.anyOf.default.github]
baseline = "tree/main"
merge_options = []
merge_strategy = ""
merge_with = []
url = "https://github.com/ipython/traitlets"
